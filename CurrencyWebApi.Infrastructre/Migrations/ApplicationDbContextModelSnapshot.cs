// <auto-generated />
using System;
using CurrencyWebApi.Infrastructre.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyWebApi.Infrastructre.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CurrencyWebApi.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AtributeName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("CurrencyWebApi.Domain.Entities.CurrencyDetail", b =>
                {
                    b.Property<int>("CurrenyId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(2);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnOrder(3);

                    b.HasKey("CurrenyId", "Date");

                    b.ToTable("CurrenyDetails");
                });

            modelBuilder.Entity("CurrencyWebApi.Domain.Entities.CurrencyDetail", b =>
                {
                    b.HasOne("CurrencyWebApi.Domain.Entities.Currency", "Currency")
                        .WithMany("CurrencyDetails")
                        .HasForeignKey("CurrenyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("CurrencyWebApi.Domain.Entities.Currency", b =>
                {
                    b.Navigation("CurrencyDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
